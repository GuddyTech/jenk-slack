pipeline {
    agent any
    
    stages {
        // Define your stages here
    }
    
    post {
        always {
            script {
                // Archive artifacts
                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true

                // Send Slack message
                slackSend(
                    channel: '#your-channel',
                    color: 'good',
                    message: "Build ${currentBuild.fullDisplayName} has finished",
                    credentialsId: 'slack-api-token'
                )

                // Send email notification
                emailext attachLog: true,
                    body: "Build ${currentBuild.fullDisplayName} has finished",
                    recipientProviders: [developers()],
                    subject: "Build Notification",
                    to: "recipient@example.com", // replace with recipient's email address
                    from: "jenkins@example.com", // replace with sender's email address
                    replyTo: "reply@example.com", // replace with reply-to email address
                    mimeType: 'text/html', // specify email content type
                    cc: "cc@example.com", // replace with cc email address
                    bcc: "bcc@example.com", // replace with bcc email address
                    credentialsId: 'smtp-credentials' // replace with your SMTP credentials ID
            }
        }
    }
}
 
